{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-intl/lib/default-locale.token.ts","ng://ngx-intl/lib/intl.service.ts","ng://ngx-intl/lib/pipes/intl-date.pipe.ts","ng://ngx-intl/lib/pipes/intl-number.pipe.ts","ng://ngx-intl/lib/ngx-intl.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","NGX_INTL_DEFAULT_LOCALE","InjectionToken","IntlService","defaultLocale","this","locale$","BehaviorSubject","prototype","updateLocale","locale","getLocale$","Injectable","args","providedIn","Inject","IntlDatePipe","changeDetectorRef","$internationalisation","_this","lastOutput","lastInput","stop$","Subject","pipe","takeUntil","skip","subscribe","_a","lastValue","lastOpts","dateObject","Date","Intl","DateTimeFormat","format","markForCheck","transform","opts","toString","arguments","currentLocale","ngOnDestroy","Pipe","name","pure","ChangeDetectorRef","IntlNumberPipe","$intl","lastDate","NumberFormat","NgxIntlModule","forRoot","options","ngModule","providers","provide","useValue","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\nexport const NGX_INTL_DEFAULT_LOCALE = new InjectionToken<string>('ngx.intl.default.locale');\n","import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { NGX_INTL_DEFAULT_LOCALE } from './default-locale.token';\n\n/**\n * @author Abdel El-medny\n *\n * This service will be the backbone of the intl number and date pipe\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IntlService {\n\n  private locale$: BehaviorSubject<string>;\n\n  constructor(@Inject(NGX_INTL_DEFAULT_LOCALE) private defaultLocale: string) {\n    this.locale$ = new BehaviorSubject<string>(this.defaultLocale);\n  }\n\n  public updateLocale(locale: string) {\n    this.locale$.next(locale);\n  }\n\n  public getLocale$(): BehaviorSubject<string> {\n    return this.locale$;\n  }\n}\n","import { ChangeDetectorRef, Pipe, PipeTransform, OnDestroy } from '@angular/core';\nimport { isEqual } from 'lodash';\nimport { Subject } from 'rxjs';\nimport { takeUntil, skip } from 'rxjs/operators';\nimport { IntlService } from '../intl.service';\n\n/**\n * @author Abdel El-medny\n *\n * Shows dates based on the Intl API\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n */\n@Pipe({\n  name: 'intlDate',\n  pure: false,\n})\nexport class IntlDatePipe implements PipeTransform, OnDestroy {\n\n  private lastOutput: string = null;\n\n  private lastInput: [Date|string, Intl.DateTimeFormatOptions] = [null, null];\n\n  private stop$ = new Subject();\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private $internationalisation: IntlService,\n  ) {\n    // If the locale changes, we will take the last inputs we were given, will re-calc the output and trigger CD\n    //\n    this.$internationalisation.getLocale$().pipe(\n      takeUntil(this.stop$),\n      skip(1),\n    )\n    .subscribe((locale) => {\n      const [lastValue, lastOpts] = this.lastInput;\n\n      const dateObject = (lastValue && typeof lastValue === 'string') ? new Date(lastValue as string) : lastValue as Date;\n\n      this.lastOutput = new Intl.DateTimeFormat(locale, lastOpts).format(dateObject);\n\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n\n  transform(value: Date|string, opts?: Intl.DateTimeFormatOptions): string {\n    // If the input hasn't changed, we will send back the last calculated value\n    //\n    if (this.lastInput.toString() === value.toString()) {\n      return this.lastOutput;\n    }\n\n    // Storing this for later usage incase locale changes\n    //\n    this.lastInput = [arguments[0] as Date|string, arguments[1] as Intl.DateTimeFormatOptions];\n\n    const currentLocale = this.$internationalisation.getLocale$().value;\n\n    const dateObject = typeof value === 'string' ? new Date(value as string) : value as Date;\n\n    this.lastOutput = new Intl.DateTimeFormat(currentLocale, opts).format(dateObject);\n\n    return this.lastOutput;\n  }\n\n  ngOnDestroy() {\n    this.stop$.next();\n  }\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { isEqual } from 'lodash';\nimport { Subject } from 'rxjs';\nimport { takeUntil, skip } from 'rxjs/operators';\nimport { IntlService } from '../intl.service';\n\n/**\n * @author Abdel El-medny\n *\n * Shows numbers based on the Intl API\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\n */\n@Pipe({\n  name: 'intlNumber',\n  pure: false,\n})\nexport class IntlNumberPipe implements PipeTransform, OnDestroy {\n\n  private lastOutput: string = null;\n\n  private lastInput: [number, Intl.NumberFormatOptions] = [null, null];\n\n  private stop$ = new Subject();\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private $intl: IntlService,\n  ) {\n    // If the locale changes, we will take the last inputs we were given, will re-calc the output and trigger CD\n    //\n    this.$intl.getLocale$().pipe(\n      takeUntil(this.stop$),\n      skip(1),\n    )\n    .subscribe((locale) => {\n      const [lastDate, lastOpts] = this.lastInput;\n\n      this.lastOutput = new Intl.NumberFormat(locale, lastOpts).format(lastDate);\n\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n\n  transform(value: number, opts?: Intl.NumberFormatOptions): string {\n    // If the input hasn't changed, we will send back the last calculated value\n    //\n    if (this.lastInput.toString() === value.toString()) {\n      return this.lastOutput;\n    }\n\n    // Storing this for later usage incase locale changes\n    //\n    this.lastInput = [arguments[0] as number, arguments[1] as Intl.NumberFormatOptions];\n\n    const currentLocale = this.$intl.getLocale$().value;\n\n    this.lastOutput = new Intl.NumberFormat(currentLocale, opts).format(value);\n\n    return this.lastOutput;\n  }\n\n  ngOnDestroy() {\n    this.stop$.next();\n  }\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { NGX_INTL_DEFAULT_LOCALE } from './default-locale.token';\nimport { NgxIntlModuleOpts } from './interfaces';\nimport { IntlDatePipe } from './pipes/intl-date.pipe';\nimport { IntlNumberPipe } from './pipes/intl-number.pipe';\n\n@NgModule({\n  declarations: [IntlDatePipe, IntlNumberPipe],\n  imports: [\n  ],\n  exports: [IntlDatePipe, IntlNumberPipe]\n})\nexport class NgxIntlModule {\n  static forRoot(options: NgxIntlModuleOpts) {\n    return {\n      ngModule: NgxIntlModule,\n      providers: [\n        { provide: NGX_INTL_DEFAULT_LOCALE, useValue: options.defaultLocale } as ValueProvider,\n      ]\n    };\n  }\n }\n"]}